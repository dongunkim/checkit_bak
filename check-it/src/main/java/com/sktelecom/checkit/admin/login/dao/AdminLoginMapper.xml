<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin.login.dao">
	
	<!-- 업무지원시스템 유저 -->
	<select id="loginUserInfo" parameterType="paramMap" resultType="commMap">
		/* admin.login.dao.AdminLognMapper.xml loginUserInfo */
	<![CDATA[
		SELECT	USER_ID,
				PASSWORD,
				USER_STATUS,
				ID_TYPE,
				USER_TYPE,
				USER_NAME,
				NICKNAME,
				EMAIL,
				HP_NO,
				PHONE_NO,
				AGENCY,
				USER_DESC,
				START_DATE,
				END_DATE,
				LOGIN_FAIL_CNT,
				PASSWORD_UPD_DT,
				CASE WHEN IFNULL(PASSWORD_UPD_DT, '') <= date_add(now(), interval -3 month) THEN 'C' ELSE 'P' END AS CNGPW_DT,
				LAST_LOGIN_DT,
				USE_YN,
				REG_ID,
				REG_DT,
				UPD_ID,
				UPD_DT,
				'1' AS SYS_TYPE
		FROM	T_USER_BAK
		WHERE	USER_ID = #{userId}
		  AND	(USER_STATUS = 'A' OR USER_STATUS = 'L')
	]]>
	</select>
	
	<!-- 로그인 실패횟수 추가 -->
	<update id="loginAdminUserPwdErr" parameterType="paramMap">
		/* admin.login.dao.AdminLognMapper.xml loginAdminUserPwdErr */
		UPDATE	T_USER
		SET		LOGIN_FAIL_CNT = IFNULL(LOGIN_FAIL_CNT, 0) + 1
			,USER_STATUS = IF(IFNULL(LOGIN_FAIL_CNT, 0) > 9, 'L', USER_STATUS)
			,UPD_DT = DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
			,UPD_ID = #{userId}
		WHERE (USER_STATUS = 'A' OR USER_STATUS = 'L')
		  AND USER_ID = #{userId}
	</update>
	
	<!-- 로그인 실패횟수 초기화 -->
	<update id="loginAdminUserPwdInit" parameterType="paramMap">
		UPDATE T_USER /* admin.login.dao.AdminLognMapper.xml loginAdminUserPwdInit */
		SET
			LOGIN_FAIL_CNT = 0
			,UPD_DT = DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
			,UPD_ID = #{userId}
			,LAST_IP = #{lastIp}
			,LAST_LOGIN_DT = DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
		WHERE (USER_STATUS = 'A' OR USER_STATUS = 'L')
		  AND USER_ID = #{userId}
	</update>
	
	<!-- 신규ID 체크 -->
	<select id="getRid" parameterType="paramMap" resultType="commMap">
		SELECT /* admin.login.dao.AdminLognMapper.xml getRid */
			A.RID
		FROM T_USER_ROLE A,T_ROLE  B
		WHERE A.USER_ID = #{userId}
		  AND A.RID = B.RID
		  AND B.ADMIN_YN = 'Y'
		  AND B.USE_YN   = 'Y'
	</select>
	
	<!-- 신규ID 체크 -->
	<select id="newIdCheck" parameterType="paramMap" resultType="commMap">
		SELECT /* admin.login.dao.AdminLognMapper.xml newIdCheck */
			IF(COUNT(1) = 0, 'Y', 'N') AS USE_YN
		FROM T_USER
		WHERE UPPER(USER_ID) = UPPER(#{userId})
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="idSearch" parameterType="paramMap" resultType="commMap">
		SELECT /* admin.login.dao.AdminLognMapper.xml idSearch */
			 IF(COUNT(1) > 0, 'Y', 'N') AS USER_YN
			,USER_ID
		FROM T_USER
		WHERE USER_STATUS = 'A'
		  AND USER_NAME = #{userName}
		  AND EMAIL   = #{email}
		  AND REPLACE(HP_NO,'-','') = #{hpNo}
	</select>
	
	<!-- 패스워드 찾기 -->
	<select id="pwdSearch" parameterType="paramMap" resultType="commMap">
		SELECT /* admin.login.dao.AdminLognMapper.xml pwdSearch */
			 IF(COUNT(1) > 0, 'Y', 'N') AS USER_YN
		FROM T_USER
		WHERE (USER_STATUS = 'A' OR USER_STATUS = 'L')
		  AND USER_ID = #{userId}
		  AND USER_NAME = #{userName}
		  AND EMAIL   = #{email}
		  AND REPLACE(HP_NO,'-','') = #{hpNo}
	</select>
	
	<!-- 임시비밀번호 저장 -->
	<update id="updatePwd" parameterType="paramMap">
		UPDATE USER_INFO /* admin.login.dao.AdminLognMapper.xml updatePwd */
			SET PASSWD = #{tmpPasswd}
			, CNGPW_DT = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
			, UPD_DT = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
		WHERE USER_ID = #{userId}
		  AND USER_NAME = #{userName}
		  AND EMAIL   = #{email}
		  AND REPLACE(HP_NO,'-','') = #{hpNo}
	</update>
	
	<!-- 사용자 등록 -->
	<insert id="insertUserInfo" parameterType="paramMap">
			INSERT INTO USER_INFO /* admin.login.dao.AdminLognMapper.xml insertUserInfo */
			(
			  USER_ID
			 ,USER_NM
			 ,TEL_NO
			 ,HP_NO
			 ,EMAIL
			 ,STATUS
			 ,CS_NO
			 ,REG_DT
			 ,REG_ID
			 ,LOGIN_FAIL_CNT
			)
			VALUES
			(
			  #{userId}
			 ,#{userNm}
			 ,#{telNo}
			 ,#{hpNo}
			 ,#{email}
			 ,'O'
			 ,'CS9999999999'
			 ,DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
			 ,#{regId}
			 ,'0'
			)
	</insert>
	
</mapper>