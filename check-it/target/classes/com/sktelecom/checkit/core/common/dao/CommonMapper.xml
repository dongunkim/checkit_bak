<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 공통 Mapper -->
<mapper namespace="common.dao">
	<!-- 최종 Last Insert ID 조회 -->
	<select id="lastIndex" resultType="int">
		<![CDATA[
			SELECT LAST_INSERT_ID()
		]]>
	</select>

	<!-- 메뉴조회 정보 -->
	<select id="selAdMenuList" parameterType="paramMap" resultType="commMap">
		/* common.dao.CommonMapper.xml selAdMenuList */
		WITH RECURSIVE CTE AS
		(
			SELECT	MENU_NAME,
					MENU_URL,
					B.MENU_ID,
					UP_MENU_ID,
					SORT_SEQ,
					A.RW_TYPE,
					DEPTH
			FROM	T_ROLE_MENU A, T_MENU B
			WHERE	A.RID = '0'
			  AND	A.MENU_ID = B.MENU_ID
			  AND	ADMIN_YN = 'Y'
			  AND	USE_YN = 'Y'
			UNION ALL
			SELECT	A.MENU_NAME,
					A.MENU_URL,
					A.MENU_ID,
					A.UP_MENU_ID,
					A.SORT_SEQ,
					'' RW_TYPE,
					A.DEPTH
			FROM	T_MENU A, CTE B
			WHERE	A.ADMIN_YN = 'Y'
			  AND	A.USE_YN = 'Y'
			  AND	A.MENU_ID = B.UP_MENU_ID
			  AND   A.UP_MENU_ID != '0'
		)
		SELECT	DISTINCT MENU_ID,
				MENU_NAME,
				MENU_URL,
				UP_MENU_ID,
				RW_TYPE,
				(DEPTH+1) AS LV,
				'R' METHOD_R,
				'W' METHOD_W,
				CASE DEPTH WHEN 1 THEN CONCAT(LPAD(SORT_SEQ,2,'0'),'0000') 
				WHEN 2 THEN CONCAT(LPAD((SELECT SORT_SEQ FROM T_MENU WHERE MENU_ID = A.UP_MENU_ID),2,'0'),
								   LPAD(SORT_SEQ,2,'0'),'00')
				WHEN 3 THEN CONCAT(LPAD((SELECT SORT_SEQ FROM T_MENU WHERE MENU_ID IN (SELECT UP_MENU_ID FROM T_MENU WHERE MENU_ID = A.UP_MENU_ID)),2,'0'),
				                   LPAD((SELECT SORT_SEQ FROM T_MENU WHERE MENU_ID = A.UP_MENU_ID),2,'0'),
				                   LPAD(SORT_SEQ,2,'0')) END AS SORT_SEQ
		FROM	CTE A
		ORDER BY SORT_SEQ
	</select>

	<!-- 메뉴조회 정보 -->
	<select id="selMenuList" parameterType="paramMap" resultType="commMap">
		/* common.dao.CommonMapper.xml selMenuList */
		WITH RECURSIVE CTE AS
		(
			SELECT	MENU_NAME,
					MENU_URL,
					MENU_ID,
					UP_MENU_ID,
					SORT_SEQ,
					1 AS LV
			FROM	T_MENU
			WHERE	UP_MENU_ID = '0'
			  AND	SYS_TYPE = #{sysType}
			  AND	USE_YN = 'Y'
			UNION ALL
			SELECT	A.MENU_NAME,
					A.MENU_URL,
					A.MENU_ID,
					A.UP_MENU_ID,
					A.SORT_SEQ,
					B.LV + 1 AS LV
			FROM	T_MENU A INNER JOIN CTE B
			   ON	A.SYS_TYPE = #{sysType}
			  AND	A.USE_YN = 'Y'
			  AND	A.UP_MENU_ID = B.MENU_ID
		)
		SELECT	MENU_NAME,
				MENU_URL,
				MENU_ID,
				UP_MENU_ID,
				LV
		FROM	CTE
		ORDER BY UP_MENU_ID, SORT_SEQ
	</select>

	<!-- 공통코드 정보 -->
	<select id="selCode" parameterType="String" resultType="commMap">
		/* common.dao.CommonMapper.xml selCode */
		SELECT	B.CODE_ID,
				B.CODE_NAME
		FROM	T_CODE_GRP A, T_CODE B 
		WHERE	A.CODE_GRP_ID = B.CODE_GRP_ID
		  AND	A.USE_YN = 'Y'
		  AND	B.SEARCH_YN = 'Y'
		  AND	B.UP_CODE_ID = #{code}
		ORDER BY B.SORT_SEQ
	</select>

	<!-- 공통코드 정보 -->
	<select id="selCodeRoot" parameterType="String" resultType="commMap">
		/* common.dao.CommonMapper.xml selCodeRoot */
		SELECT	B.CODE,
				B.CNAME
		FROM	T_CODE_GRP A, T_CODE B 
		WHERE	A.CODE_ID = B.ROOT
		  AND	A.USED_YN = 'Y'
		  AND	B.SEARCH_YN = 'Y'
		  AND	B.ROOT   = #{code}
		  AND	B.DEPTH != 0
	</select>

	<!-- 공통코드 정보 -->
	<select id="selCodeSubDepth" parameterType="paramMap" resultType="commMap">
		/* common.dao.CommonMapper.xml selCodeSubDepth */
		SELECT	A.code,
				CONCAT('[', B.cname, '] ', A.cname) cname
		FROM
			(
				SELECT	*
				FROM	T_CODE
				WHERE	1=1
				  AND	root = #{code}
				  AND	heigher != #{code}
				<if test="higher != null and higher != ''">
				  AND heigher = #{higher}
				</if>
			) A,
			(
				SELECT	B.*
				FROM	T_CODE_GRP A, T_CODE B
				WHERE	A.CODE_ID = B.ROOT
				  AND	A.USED_YN = 'Y'
				  AND	B.SEARCH_YN = 'Y'
				  AND	root = #{code}
				  AND	depth = 
						<if test="higher != null and higher != ''">
                           (SELECT MIN(CAST(depth AS UNSIGNED)-1) FROM T_CODE WHERE heigher = #{higher})
						</if>
						<if test="higher == null or higher == ''">
                           ('0')
						</if>
			) B
		WHERE	A.heigher = B.code
	</select>

	<!-- 게시판 첨부 파일 -->
	<insert id="insAttachFile" parameterType="paramMap">
		/* common.dao.CommonMapper.xml insAttachFile */
		INSERT INTO T_ATTACH_FILE
			(
				<if test="attachId != null and attachId != ''">
				ATTACH_ID,
				</if>
				ATTACH_SEQ,
				FILE_ORIGIN_NAME,
				FILE_NAME,
				FILE_SIZE,
				FILE_PATH,
				FILE_CONTENT_TYPE,
				REG_ID,
				REG_DT,
				UPD_ID,
				UPD_DT
			)
		SELECT	<if test="attachId != null and attachId != ''">
				#{attachId},
				</if>
				NVL((MAX(ATTACH_SEQ) + 1), 1),
				#{fileName},
				#{fileChangeName},
				#{fileSize},
				#{filePath},
				#{fileContentType},
				#{userId},
				DATE_FORMAT(NOW(), '%Y%m%d%H%i%s'),
				#{userId},
				DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
		FROM	T_ATTACH_FILE
		WHERE	ATTACH_ID = #{attachId}
	</insert>

	<!-- 파일 정보 삭제 -->
	<delete id="delAttachFile" parameterType="paramMap">
		/* common.dao.CommonMapper.xml delAttachFile */
		DELETE	FROM T_ATTACH_FILE
		WHERE	ATTACH_ID = #{attachId}
		  AND	ATTACH_SEQ = #{attachSeq}
	</delete>

	<!-- 파일 리스트조회 -->
	<select id="selAttachFileList" parameterType="paramMap" resultType="commMap">
		/* common.dao.CommonMapper.xml selAttachFileList */
		SELECT	ATTACH_ID,
				ATTACH_SEQ,
				FILE_ORIGIN_NAME,
				FILE_NAME,
				FILE_SIZE,
				FILE_PATH,
				FILE_CONTENT_TYPE,
				REG_ID,
				REG_DT,
				UPD_ID,
				UPD_DT
		FROM	T_ATTACH_FILE
		WHERE	ATTACH_ID = #{attachId}
	</select>

	<!-- 파일 조회 -->
	<select id="selAttachFileDetail" parameterType="paramMap" resultType="commMap">
		/* common.dao.CommonMapper.xml selAttachFileDetail */
		SELECT	ATTACH_ID,
				ATTACH_SEQ,
				FILE_ORIGIN_NAME,
				FILE_NAME,
				FILE_SIZE,
				FILE_PATH,
				FILE_CONTENT_TYPE,
				REG_ID,
				REG_DT,
				UPD_ID,
				UPD_DT
		FROM	T_ATTACH_FILE
		WHERE	ATTACH_ID = #{attachId}
		  AND	ATTACH_SEQ = #{attachSeq}
	</select>

	<!-- Sequence 조회 -->
	<select id="selIdGen" parameterType="String" resultType="commMap">
		/* common.dao.CommonMapper.xml selIdGen */
		SELECT	TABLE_NAME,
				SEQ_TYPE,
				PREFIX,
				CURR_YEAR,
				CURR_MONTH,
				CURR_DAY,
				CURR_NO AS SEQ,
				CIPERS,
				FILL_CHAR
		FROM	T_ID_GEN
		WHERE	TABLE_NAME = #{tableName}
	</select>
		
	<update id="updIdGenNextNo" parameterType="String">
		/* common.dao.CommonMapper.xml updIdGenNextNo */
		UPDATE	T_ID_GEN
		SET		CURR_NO = IFNULL(CURR_NO, 0) + 1
		WHERE	TABLE_NAME = #{tableName}			
	</update>
	
	<update id="updIdGenCycle" parameterType="commMap">
		/* common.dao.CommonMapper.xml updIdGenCycle */
		UPDATE	T_ID_GEN
		SET		CURR_YEAR = #{currYear},
				CURR_MONTH = #{currMonth},
				CURR_DAY = #{currDay}, 
				CURR_NO = #{currNo}
		WHERE	TABLE_NAME = #{tableName}			
	</update>	

</mapper>
